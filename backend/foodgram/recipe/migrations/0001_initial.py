# Generated by Django 4.0.5 on 2022-06-18 18:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название', max_length=200, verbose_name='name')),
                ('measurement_unit', models.CharField(help_text='Единицы измерения', max_length=200, verbose_name='measurement_unit')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название', max_length=200, verbose_name='name')),
                ('image', models.ImageField(upload_to='recipe/', verbose_name='Картинка')),
                ('text', models.TextField(help_text='Описание', verbose_name='description')),
                ('cooking_time', models.PositiveIntegerField(help_text='Время приготовления (в минутах)', validators=[django.core.validators.MinValueValidator(1)], verbose_name='cooking_time')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название', max_length=200, verbose_name='name')),
                ('color', models.CharField(blank=True, help_text='Цвет в HEX', max_length=7, null=True, verbose_name='hex_color')),
                ('slug', models.SlugField(help_text='Уникальный слаг', max_length=200, unique=True, verbose_name='code')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Рецепт', on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='recipe')),
                ('tag', models.ForeignKey(help_text='Тэг', on_delete=django.db.models.deletion.CASCADE, to='recipe.tag', verbose_name='tag')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Количество ингредиента в рецепте', validators=[django.core.validators.MinValueValidator(1)], verbose_name='amount')),
                ('ingredient', models.ForeignKey(help_text='Ингредиент', on_delete=django.db.models.deletion.CASCADE, to='recipe.ingredient', verbose_name='ingredient')),
                ('recipe', models.ForeignKey(help_text='Рецепт', on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='recipes')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeFavorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Рецепт в избранном', on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='recipe')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Рецепт в корзине', on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='recipe')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(help_text='Ингредиенты в рецепте', related_name='recipes', through='recipe.RecipeIngredient', to='recipe.ingredient', verbose_name='ingredients'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Тэги рецепта', related_name='recipes', through='recipe.RecipeTag', to='recipe.tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='user_carts',
            field=models.ManyToManyField(help_text='Пользователи, добавившие рецепт в корзину', related_name='recipes_in_cart', through='recipe.RecipeCart', to=settings.AUTH_USER_MODEL, verbose_name='user_carts'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='user_favorites',
            field=models.ManyToManyField(help_text='Пользователи, добавившие рецепт в избранное', related_name='recipes_in_fav', through='recipe.RecipeFavorites', to=settings.AUTH_USER_MODEL, verbose_name='user_favorites'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_follow'),
        ),
    ]
